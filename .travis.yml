---
language: generic
jdk: "openjdk8"
node_js: "9.8"

dist: trusty

services:
  - postgresql

addons:
  postgresql: "9.6"
  sonarcloud:
    organization: "snieking"
    token:
      secure: "VKnB387z+RQctdyt7FjWPXwwkCmxbLstyey72k5mauMkmWLMkFJFSM/VaiGnJKqik3DfGpV0W/wqTktLYQ+SawP17nK+IqzIB9z5ZzfRo9o8nyea0Nkb/6pIxkABnNJGAQLRIG3w8cNvPvf1FHHmZXOi613Rbq4EvYynPaMVndJU0Vrzas+StfHNWilhZ0hApB0ZTa62w3o36FMCY4hzqueip7B+qDUHRbddWe580TzPExqaKUwa26OWENtMsS/MrsvzIOsw41mkTvEnV3P7Lp8Dg+x7WwcGBfYPZ0H1VD91hEgdy+wJOoEyKWoA7lSTR7k7wx+SGXtiQBJarGCgh1UQenUr5rMtDrajVgQpJJcHc/k8MDNk1N7DLiruoW6CCy3vlZYaiC52Yu2U8z8SS0uIlE3tTiHHXG2tVoH2jJOgB7X8IAa9XruWomeHvS55KRVjta4CIebLZGVbavL4cPEVND44uHePfgdE8KbN3d2FOe/ikuq46PzijUmgfGp3lxWPYg/RjsRoPxXbbt3sCNq3TxEkCANdfDrbAqBqN0EyIMDmDYPVVI9AW5K1eRLIZfHBwrXA9Bv76QYnV0GJXWMuuXej0Q45pbVpOLrcC6WCfdEOTzmjTsgAfQSyyMgtzowDa4CS1+ZaXyQs2TxzE7Z+px2E9YQ9Bprfk5QHQ08="

before_script:
  - npm i yarn
  - bash rell/install-postgres-10.sh
  - psql -c "create database chrotonomy;" -U postgres
  - psql -c "create role postchain LOGIN ENCRYPTED PASSWORD 'postchain';" -U postgres
  - psql -c "grant ALL ON DATABASE chrotonomy TO postchain;" -U postgres

cache:
  pip: true
  directories:
    - node_modules

install:
  - sudo pip install awscli

script:
  - cd rell
  - ./init-node.sh
  - ./run-node.sh &
  - cd ..
  - npm install
  - npm run coveralls
  - sonar-scanner
  - npm run build

# Deploy using awscli to enable pruning of removed files
deploy:
  provider: s3
  access_key_id: $AWS_ACCESS_KEY_ID
  secret_access_key: $AWS_SECRET_ACCESS_KEY
  bucket: chrotonomy.com
  skip_cleanup: true
  local_dir: build
  acl: public_read
  on:
    branch: master
  region: eu-west-1
  cache_control: "max-age=21600"
after_deploy:
  # Allow `awscli` to make requests to CloudFront.
  - aws configure set preview.cloudfront true
  # Invalidate every object in the targeted distribution.
  - aws cloudfront create-invalidation --distribution-id $CLOUDFRONT_DISTRIBUTION_ID --paths "/*"